{
	"info": {
		"_postman_id": "975e3db0-c080-44a2-a335-6bb147fd611e",
		"name": "UdemyCourse",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25495530"
	},
	"item": [
		{
			"name": "1.Status",
			"item": [
				{
					"name": "welcomePage",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}",
							"host": [
								"{{baseUrl}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "statusControl",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"}); \r",
									"\r",
									"pm.test(\"Status is UP\", ()=>{\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.status).to.eql(\"UP\")\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2.Tools",
			"item": [
				{
					"name": "getTools",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"const tools = response.filter((tool)=>\r",
									"    tool.inStock === true\r",
									");\r",
									"\r",
									"const tool = tools[0];\r",
									"\r",
									"if(tool){\r",
									"    pm.globals.set(\"toolId\", tool.id)\r",
									"}\r",
									"\r",
									"pm.test(\"Tool Found\", ()=>{\r",
									"    pm.expect(tool).to.be.an('object');\r",
									"    pm.expect(tool.inStock).eql(true);\r",
									"    pm.expect(tool.category).eql(pm.collectionVariables.get(\"category\"));\r",
									"    pm.expect(tool.inStock).to.be.true;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tools?category={{category}}&results={{results}}&available={{available}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tools"
							],
							"query": [
								{
									"key": "category",
									"value": "{{category}}"
								},
								{
									"key": "results",
									"value": "{{results}}"
								},
								{
									"key": "available",
									"value": "{{available}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getToolWithId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"const id = response.id;\r",
									"const currentStock = response[\"current-stock\"];\r",
									"\r",
									"pm.test(\"Id is equal\", ()=>{\r",
									"    pm.expect(id).eql(pm.globals.get(\"toolId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Tool Found above 0\", ()=>{\r",
									"    pm.expect(currentStock).to.be.above(0)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tools/:toolId?user-manual=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tools",
								":toolId"
							],
							"query": [
								{
									"key": "user-manual",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "toolId",
									"value": "{{toolId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3.Orders",
			"item": [
				{
					"name": "createOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//console.log(pm.globals.set(\"orderId\"));\r",
									"\r",
									"//console.log(pm.globals.get(\"orderId\", \"Mehmet\"))\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"pm.globals.set(\"orderId\", response.orderId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"toolId\": {{toolId}},\r\n \"customerName\": \"John Doe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllOrders",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "getOrderWithId",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orders/:orderId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "{{orderId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"customerName\": \"Mehmet ÖCAL\",\r\n    \"comment\": \"İsim değişikliği yapıldı\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/orders/:orderId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "0pPtsj7v4bQfQAYxLvJi7"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "4.Authentication",
			"item": [
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(pm.collectionVariables.get(\"apiToken\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"clientName\": \"{{$randomFullName}}\",\r\n    \"clientEmail\": \"{{$randomEmail}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api-clients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-clients"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://simple-tool-rental-api.glitch.me"
		},
		{
			"key": "apiToken",
			"value": "9801a42cf27471e10bf14ae1063688782e6091cba333a9702b21ffb3cc0356e3",
			"type": "string"
		},
		{
			"key": "category",
			"value": "electric-generators",
			"type": "string"
		},
		{
			"key": "results",
			"value": "5",
			"type": "string"
		},
		{
			"key": "available",
			"value": "true",
			"type": "string"
		}
	]
}